<Page
    x:Class="EpicGamesLauncher.Pages.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:EpicGamesLauncher.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    Title="Settings"
    d:DesignHeight="829"
    d:DesignWidth="1538"
    Background="{StaticResource SearchBackgroundBrush}"
    FontFamily="Brutal Type"
    FontSize="16"
    Foreground="#EBEBEB"
    mc:Ignorable="d">

    <Page.Resources>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="Transparent" />
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#EBEBEB" />
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#0057BD" />
        <SolidColorBrush x:Key="OptionMark.Static.CheckedBorder" Color="#0057BD" />
        <SolidColorBrush x:Key="CheckBoxOuter.MouseOver.Checked.Background" Color="#1A2E45" />
        <SolidColorBrush x:Key="CheckBoxOuter.MouseOver.UnChecked.Background" Color="#4D4D4D" />
        <SolidColorBrush x:Key="CheckBox.MouseOver.Foreground" Color="#EBEBEB" />

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="ClickMode" Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border
                            x:Name="templateRoot"
                            Background="#6C6D6D6D"
                            BorderBrush="#FFACACAC"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <Border
                                x:Name="splitBorder"
                                Width="45"
                                Margin="0"
                                HorizontalAlignment="Right"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                SnapsToDevicePixels="true">
                                <Path
                                    x:Name="arrow"
                                    Margin="16,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{StaticResource DownIcon}"
                                    Fill="{StaticResource CaptionFontBrush}"
                                    RenderTransformOrigin="0.5 0.5"
                                    Stretch="Uniform">
                                    <Path.RenderTransform>
                                        <RotateTransform />
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <!--<Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Border}" />
                            </MultiDataTrigger>-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <!--<Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Pressed.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Border}" />
                            </MultiDataTrigger>-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Disabled.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                            </MultiDataTrigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard SpeedRatio="5">
                                            <DoubleAnimation
                                                Storyboard.TargetName="arrow"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                From="0"
                                                To="180" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard SpeedRatio="5">
                                            <DoubleAnimation
                                                Storyboard.TargetName="arrow"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                From="180"
                                                To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="39" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0" MinWidth="26" />
                </Grid.ColumnDefinitions>
                <Popup
                    x:Name="PART_Popup"
                    Grid.ColumnSpan="3"
                    Margin="1"
                    AllowsTransparency="true"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Bottom"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome
                        x:Name="shadow"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        Color="Transparent">
                        <Border
                            x:Name="dropDownBorder"
                            Background="{StaticResource ComboBox.Static.Background}"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                            BorderThickness="1">
                            <ScrollViewer Style="{StaticResource ScrollViewerStyle1}" x:Name="DropDownScrollViewer" CanContentScroll="False">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas
                                        x:Name="canvas"
                                        Width="0"
                                        Height="0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top">
                                        <Rectangle
                                            x:Name="opaqueRect"
                                            Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                            Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                            Fill="{Binding Background, ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter
                                        x:Name="ItemsPresenter"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton
                    x:Name="toggleButton"
                    Grid.ColumnSpan="3"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    Style="{StaticResource ComboBoxToggleButton}" />

                <Path
                    Grid.Column="0"
                    Height="18"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Data="{StaticResource WorldIcon}"
                    Fill="{TemplateBinding Foreground}" />

                <ContentPresenter
                    x:Name="contentPresenter"
                    Grid.Column="1"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding SelectionBoxItem}"
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                    IsHitTestVisible="false"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                    <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                    <Setter TargetName="shadow" Property="Color" Value="#71000000" />
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Padding" Value="36,1" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontWeight" Value="Thin" />
            <Setter Property="Height" Value="56" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border
                            x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">

                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="FontFamily" Value="Lato" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="#6C6D6D" />
            <Setter Property="BorderBrush" Value="#FFACACAC" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="MinHeight" Value="56" />
            <Setter Property="MinWidth" Value="200" />
            <Setter Property="MaxDropDownHeight" Value="226" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Padding" Value="10,0" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
            <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle1}" />
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
            <Setter Property="Foreground" Value="{StaticResource CaptionFontBrush}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="8,0" />
            <Setter Property="FontSize" Value="17" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid
                            x:Name="templateRoot"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid
                                x:Name="CheckBoxOuter"
                                Width="38"
                                Height="38"
                                Background="{StaticResource OptionMark.Static.Background}">
                                <Border
                                    x:Name="checkBoxBorder"
                                    Width="20"
                                    Height="20"
                                    Margin="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">

                                    <Grid
                                        x:Name="markGrid"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                        <Path
                                            x:Name="optionMark"
                                            Margin="1"
                                            Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                            Fill="{StaticResource OptionMark.Static.Glyph}"
                                            Opacity="0"
                                            Stretch="None" />
                                        <Rectangle
                                            x:Name="indeterminateMark"
                                            Margin="2"
                                            Fill="{StaticResource OptionMark.Static.Glyph}"
                                            Opacity="0" />
                                    </Grid>
                                </Border>
                            </Grid>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="CheckBoxOuter" Property="Background" Value="{StaticResource CheckBoxOuter.MouseOver.Checked.Background}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsChecked" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="CheckBoxOuter" Property="Background" Value="{StaticResource CheckBoxOuter.MouseOver.UnChecked.Background}" />
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource CheckBox.MouseOver.Foreground}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                                <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.CheckedBorder}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid>
        <Button Click="Button_Click" Style="{StaticResource SettingsNavBackButtonStyle}" />

        <StackPanel>

            <StackPanel
                Margin="38,97,38,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Orientation="Vertical">
                <StackPanel.Resources>
                    <SolidColorBrush x:Key="HyperLink.Static.Foreground" Color="#EBEBEB" />
                    <Style TargetType="{x:Type Hyperlink}">
                        <Setter Property="TextDecorations" Value="None" />
                        <Setter Property="FontWeight" Value="Thin" />
                        <Setter Property="Foreground" Value="White" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource HyperLink.Static.Foreground}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Resources>

                <TextBlock Text="LANGUAGE" />

                <ComboBox
                    Width="500"
                    Margin="0,22"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    SelectedIndex="0"
                    Style="{DynamicResource ComboBoxStyle1}">
                    <ComboBoxItem Content="Default" />
                    <ComboBoxItem Content="English (United States)" />
                    <ComboBoxItem Content="français" />
                    <ComboBoxItem Content="Deutsch" />
                    <ComboBoxItem Content="español (México)" />
                    <ComboBoxItem Content="español (España)" />
                    <ComboBoxItem Content="italiano" />
                    <ComboBoxItem Content="русский" />
                    <ComboBoxItem Content="العربية" />
                    <ComboBoxItem Content="português (Brasil)" />
                    <ComboBoxItem Content="polski" />
                    <ComboBoxItem Content="Türkçe" />
                    <ComboBoxItem Content="Traditional Chinese (繁體中文)" />
                </ComboBox>

                <Separator Margin="0,18" Background="#363636" />

                <TextBlock Margin="0,18,0,0" Text="PREFERENCES" />

                <StackPanel
                    Margin="30,20,38,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Orientation="Vertical">
                    <CheckBox Content="Run When My Computer Starts" IsChecked="True" />
                    <CheckBox Margin="0,18,0,0" Content="Enable Debug Logging" />
                    <CheckBox Margin="0,18,0,0" Content="Use Proxy" />
                </StackPanel>

                <Separator Margin="0,28" Background="#363636" />

                <StackPanel Margin="38,6">

                    <TextBlock>
                        <Hyperlink>Troubleshoot</Hyperlink>
                    </TextBlock>

                    <TextBlock Margin="0,25,0,0">
                        <Hyperlink NavigateUri="https://www.epicgames.com/help/en-US" RequestNavigate="Hyperlink_RequestNavigate">Support</Hyperlink>
                    </TextBlock>

                    <TextBlock Margin="0,25,0,0">
                        <Hyperlink NavigateUri="" RequestNavigate="Hyperlink_RequestNavigate">
                            <Run Text="Show Logs" />
                        </Hyperlink>
                    </TextBlock>

                    <TextBlock Margin="0,25,0,0">
                        <Hyperlink NavigateUri="https://trello.com/b/GXLc34hk/epic-games-store-roadmap" RequestNavigate="Hyperlink_RequestNavigate">Epic Games Store Roadmap</Hyperlink>
                    </TextBlock>

                </StackPanel>

                <Separator Margin="0,28" Background="#363636" />

                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <TextBlock>
                        <Hyperlink
                            FontWeight="Normal"
                            NavigateUri="https://www.epicgames.com/site/en-US/about"
                            RequestNavigate="Hyperlink_RequestNavigate">
                            About Epic Games
                        </Hyperlink>
                    </TextBlock>

                    <Rectangle
                        Width="1.5"
                        Margin="5,0"
                        Fill="{StaticResource BackIconBrush}" />

                    <TextBlock>
                        <Hyperlink
                            FontWeight="Normal"
                            NavigateUri="https://www.epicgames.com/site/en-US/privacypolicy"
                            RequestNavigate="Hyperlink_RequestNavigate">
                            Privacy Policy
                        </Hyperlink>
                    </TextBlock>

                    <Rectangle
                        Width="1.5"
                        Margin="5,0"
                        Fill="{StaticResource BackIconBrush}" />

                    <TextBlock>
                        <Hyperlink
                            FontWeight="Normal"
                            NavigateUri="https://www.epicgames.com/site/en-US/tos"
                            RequestNavigate="Hyperlink_RequestNavigate">
                            Terms of Service
                        </Hyperlink>
                    </TextBlock>

                </StackPanel>

            </StackPanel>

        </StackPanel>


    </Grid>
</Page>
